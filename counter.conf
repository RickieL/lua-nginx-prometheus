# Please copy to nginx's conf.d directory
# Set search paths for pure Lua external libraries (';;' is the default path):
lua_package_path "$prefix/nginx-lua-prometheus/?.lua;$prefix/lua-resty-consul/lib/resty/?.lua;$prefix/Counter/lib/?.lua;;";

# Set Prometheus global dict
lua_shared_dict prometheus_metrics 10M; #init 10M memory
lua_shared_dict uri_by_host 10M;
lua_shared_dict global_set 1M;
# Development option, if deploy production, pls cache on!  
# 这个值要保持on，不然每次请求都会重新初始化count里的值，导致统计不到相关数据
lua_code_cache on;

# 新版 prometheus 要求使用 init_worker_by_lua_block， 提高性能
init_worker_by_lua_block {
    counter = require 'counter'
    consul_host = "<Your consul host ip>"
    consul_port = <Your consul port>
    consul_token = "Your consul token"  -- 当不需要token，直接把值置空就行
    counter.init()
}

log_by_lua_block {
    -- 以consul里设置的频率进行采样
    counter.filter_log()

    -- 匹配到的host和url全部进行统计
    -- counter.full_log()
}

# Expose prometheus's metrics scrape port
server {
    listen 9145;
    allow 127.0.0.1;
    deny all;
    access_log off;

    location /metrics {
        content_by_lua 'prometheus:collect()';
    }

    location /deregister {
        content_by_lua_block {
            counter:deregister()
        }
    }

    location /register {
        content_by_lua_block {
           counter:register()
       }
    }

    location /test {
        content_by_lua_block {
            counter:random()
        }
    }

    location /update_count_percent {
        content_by_lua_block {
            counter:update_count_percent()
        }
    }
    location /get_count_percent {
        content_by_lua_block {
            local count = counter:get_count_percent_mem()
            ngx.say("count: " .. tostring(count))
        }
    }
}
